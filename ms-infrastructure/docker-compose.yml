services:
  postgres:
    container_name: postgres
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=keycloak
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - '5432:5432'
    volumes:
      - ./initdb/01-create-tbdb.sql:/docker-entrypoint-initdb.d/01-create-tbdb.sql
      - ./postgre-data-volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:latest
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: Pa55w0rd
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
    command: start-dev --hostname-strict=false
    ports:
      - "8080:8080"
      - "8787:8787" # debug port
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./keycloak-data-volume:/var/lib/keycloak/data
  rabbitmq:
    image: rabbitmq:management
    container_name: trendburada-rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
  configuration:
    container_name: configuration
    image: turkuazsengul/ms-node-configuration
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    ports:
      - "8888:8888"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://configuration:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
  discovery:
    container_name: eureka
    image: turkuazsengul/ms-node-discovery
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    ports:
      - "5555:5555"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://eureka:5555/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
  ms-api-user:
    container_name: ms-api-user
    image: turkuazsengul/ms-api-user
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    ports:
      - "40000:40000"
      - "5005:5005"
    command: >
      java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -jar /app/app.jar
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://ms-api-user:40000/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      configuration:
        condition: service_healthy
      discovery:
        condition: service_healthy
  frontend:
    container_name: trend-burada-web
    image: turkuazsengul/trend-burada-web:latest
    environment:
      - "NODE_ENV=development"
    ports:
      - "3000:80"
    command: ["nginx", "-g", "daemon off;"]
    depends_on:
      ms-api-user:
        condition: service_healthy